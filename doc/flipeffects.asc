[[flipeffects]]
Effects (flipeffects)
~~~~~~~~~~~~~~~~~~~~~

In this chapter, we'll try to describe each _effect_ (or, natively called, _flipeffect_) for every TR engine version. Given the fact that effect listing changed from version to version, yet retaining common ones, the easiest way to lay them down is to create a table with effect indexes corresponding to each game version.

Effect names are directly brought from native SDK or debug listings, where available (namely TR1, TR4 and TR5). When native names aren't available (which is the case for TR2 and TR3) or wrong (which happens in TR4 and TR5 listings), new ones will be coined. It's possible that same effect goes under different names in different game versions. In this case, effect name will be preserved (for historical [sic] reasons), and description will point to an effect with more common name.

[NOTE]
====
As mentioned <<animcommand-structure,here>>, effects could be called in two ways -- either by an entity via _AnimCommand_, or by _trigger action_. However, there are certain effects which strictly require caller entity ID to work with (see effect descriptions for that). In such case, if effect is called by trigger action, _resulting outcome is undefined_ in original engine. The most sane way to deal with this situation is to pass an ID of entity which activated given trigger.

On contrary, some effects may require _certain trigger action_ and/or _certain trigger type_ to be called at the moment. In such case, if effect is called via AnimCommand, _resulting outcome is undefined_ in original engine.
====

[width="100%",cols="1<,2^m,2^m,2^m,2^m,2^m",options="header",align="center"]
|============================================================================================================
| Index           |        TR1        |        TR2        |        TR3        |        TR4        |        TR5        
| 0               | TURN180           | TURN180           | TURN180           | ROTATE_180        | ROTATE_180          
| 1               | DINO_STOMP        | FLOOR_SHAKE       | FLOOR_SHAKE       | FLOOR_SHAKE       | FLOOR_SHAKE         
| 2               | LARA_NORMAL       | LARA_NORMAL       | LARA_NORMAL       | LARA_NORMAL       | LARA_NORMAL         
| 3               | LARA_BUBBLES      | LARA_BUBBLES      | LARA_BUBBLES      | LARA_BUBBLES      | LARA_BUBBLES        
| 4               | FINISH_LEVEL      | FINISH_LEVEL      | FINISH_LEVEL      | FINISH_LEVEL      | FINISH_LEVEL        
| 5               | EARTHQUAKE_FX     | FLOOD_FX          |                   | ACTIVATE_CAMERA   | ACTIVATE_CAMERA     
| 6               | FLOOD_FX          | CHANDELIER_FX     |                   | ACTIVATE_KEY      | ACTIVATE_KEY        
| 7               | RAISINGBLOCK_FX   | RUBBLE_FX         | RUBBLE_FX         | RUBBLE_FX         | RUBBLE_FX            
| 8               | STAIRS2SLOPE_FX   | PISTON_FX         |                   | CROWBAR           | CROWBAR             
| 9               | SAND_FX           | CURTAIN_FX        | CURTAIN_FX        | -                 | -
| 10              | POWERUP_FX        | SETCHANGE_FX      | SETCHANGE_FX      | SETCHANGE_FX      | SETCHANGE_FX         
| 11              | EXPLOSION_FX      | EXPLOSION_FX      | EXPLOSION_FX      | EXPLOSION_FX      | EXPLOSION_FX        
| 12              | LARA_HANDSFREE    | LARA_HANDSFREE    | LARA_HANDSFREE    | LARA_HANDSFREE    | LARA_HANDSFREE      
| 13              | FLIP_MAP          | FLIP_MAP          |                   | -                 | -
| 14              | DRAW_RIGHTGUN     | DRAW_RIGHTGUN     | DRAW_RIGHTGUN     | DRAW_RIGHTGUN     | DRAW_RIGHTGUN       
| 15              | CHAINBLOCK_FX     | DRAW_LEFTGUN      | DRAW_LEFTGUN      | DRAW_LEFTGUN      | DRAW_LEFTGUN        
| 16              | FLICKER_FX        | SHOOT_RIGHTGUN    | SHOOT_RIGHTGUN    | SHOOT_RIGHTGUN    | SHOOT_RIGHTGUN      
| 17              |                   | SHOOT_LEFTGUN     | SHOOT_LEFTGUN     | SHOOT_LEFTGUN     | SHOOT_LEFTGUN       
| 18              |                   | MESH_SWAP1        | MESH_SWAP1        | MESH_SWAP1        | MESH_SWAP1          
| 19              |                   | MESH_SWAP2        | MESH_SWAP2        | MESH_SWAP2        | MESH_SWAP2          
| 20              |                   | MESH_SWAP3        | MESH_SWAP3        | MESH_SWAP3        | MESH_SWAP3          
| 21              |                   | INV_ON            | INV_ON            | INV_ON            | INV_ON              
| 22              |                   | INV_OFF           | INV_OFF           | INV_OFF           | INV_OFF             
| 23              |                   | DYN_ON            | DYN_ON            | DYN_ON            | DYN_ON              
| 24              |                   | DYN_OFF           | DYN_OFF           | DYN_OFF           | DYN_OFF             
| 25              |                   | STATUE_FX         | STATUE_FX         | -                 | -            
| 26              |                   | RESET_HAIR        | RESET_HAIR        | RESET_HAIR        | RESET_HAIR          
| 27              |                   | BOILER_FX         | BOILER_FX         | -                 | -            
| 28              |                   | ASSAULT_RESET     | ASSAULT_RESET     | SETFOG            | SETFOG              
| 29              |                   | ASSAULT_STOP      |                   | GHOSTTRAP         | GHOSTTRAP           
| 30              |                   | ASSAULT_START     | ASSAULT_START     | LARALOCATION      | LARALOCATION        
| 31              |                   | ASSAULT_FINISHED  | ASSAULT_FINISHED  | CLEARSCARABS      | CLEARSCARABS        
| 32              |                   |                   | FOOTPRINT_FX      | FOOTPRINT_FX      | FOOTPRINT_FX        
| 33              |                   |                   | ASSAULT_PENALTY_8 | -                 | -           
| 34              |                   |                   | RACETRACK_START   | -                 | -           
| 35              |                   |                   | RACETRACK_RESET   | -                 | -           
| 36              |                   |                   | RACETRACK_FINISHED| -                 | -        
| 37              |                   |                   | ASSAULT_PENALTY_30| -                 | -         
| 38              |                   |                   | GYM_HINT_1        | -                 | -         
| 39              |                   |                   | GYM_HINT_2        | -                 | -         
| 40              |                   |                   | GYM_HINT_3        | -                 | -         
| 41              |                   |                   | GYM_HINT_4        | -                 | -         
| 42              |                   |                   | GYM_HINT_5        | -                 | -         
| 43              |                   |                   | GYM_HINT_6        | POURSWAP1         | POURSWAP1         
| 44              |                   |                   | GYM_HINT_7        | POURSWAP2         | POURSWAP2         
| 45              |                   |                   | GYM_HINT_8        | LARALOCATIONPAD   | LARALOCATIONPAD
| 46              |                   |                   | GYM_HINT_9        | KILLACTIVEBADDIES | KILLACTIVEBADDIES
| 47              |                   |                   | GYM_HINT_10       |                   |                   
| 48              |                   |                   | GYM_HINT_11       |                   |                  
| 49              |                   |                   | GYM_HINT_12       |                   |                  
| 50              |                   |                   | GYM_HINT_13       |                   |                  
| 51              |                   |                   | GYM_HINT_14       |                   |                  
| 52              |                   |                   | GYM_HINT_15       |                   |                  
| 53              |                   |                   | GYM_HINT_16       |                   |                  
| 54              |                   |                   | GYM_HINT_17       |                   |                  
| 55              |                   |                   | GYM_HINT_18       |                   |                  
| 56              |                   |                   | GYM_HINT_19       |                   |                  
| 57              |                   |                   | GYM_HINT_RESET    |                   |
|=============================================================================================================

[NOTE]
====
In original engines, all effects which name begins with `LARA` prefix automatically take Lara character as an entity to work with.
====

* `ROTATE_180` -- Rotates an entity 180 degrees around yaw axis _and also around pitch axis for underwater cases_. Mostly used in Lara roll animations. This effect needs special approach if original animation frames are interpolated, because usually rotation is done on animation transition (e.g., frame 5 of Lara animation 48, which is second and final part of her roll movement). To prevent stray misaligned interpolated frames, this effect must be performed only in the end of frame-to-frame interpolated sequence. 

* `TURN180` -- Same as `ROTATE_180`.

* `LARA_NORMAL` -- Resets certain internal Lara parameters to default ones, including movement modes and camera position.

* `FLOOR_SHAKE` -- If entity producing this effect is in less than 8 sector range, send _shake effect_ to camera. Shake effect is a variable which is inversely proportional to entity distance, and, when sent to camera, makes it shake with corresponding amplitude gradually fading out. If there are multiple FLOOR_SHAKE events constantly occuring nearby camera, _shake effect_ won't accumulate, but rather overwrite previous value.

* `DINO_STOMP` -- Same as `FLOOR_SHAKE`.

* `LARA_BUBBLES` -- When underwater, emit bubble sound (ID #37) and produce bubble particle for Lara. Position of bubble is linked to model's last mesh (which is headmesh in case of Lara). 

* `FINISH_LEVEL` -- Same effect as _TrigAction_ `0x07` -- immediately loads next level. For TR4, (which requires explicit level index to jump), current level index is increased and passed as level index to jump to.

* `ACTIVATE_CAMERA` -- If there is a trigger type _Key_ (SubFunction `0x03`) being queued at the moment, and there are any _Camera_ TrigActions (`0x01`) present in `ActionList`, these TrigActions will be forced to activate at a given frame of _keyhole entity_ current animation, rather than at the ending frame of it. Works only for _keyhole entities_ which have complex activation animations, not single-frame ones. It can be used to change camera POV before keyhole animation is finished.

* `ACTIVATE_KEY` -- Same as above, but works for _Object_ TrigAction. That is, any entities to be activated from `ActionList` will be activated at a given frame of _keyhole entity_ current animation, rather than at the ending frame of it. Can be used to activate entities before actual keyhole animation is finished.

* `CROWBAR` -- Swaps given entity's mesh #10 index with same mesh's index from _CROWBAR_ANIM_ model (either model ID #246 in TR4, or model ID #240 in TR5). Calling this effect again swaps mesh #10 back to native. Used primarily in cutscenes to create an illusion of Lara getting crowbar in her hand.

* `LARA_HANDSFREE` -- Functionally removes any weapon from Lara's hands. If called during holstering or unholstering operation, immediately aborts it. Note that holstering animation won't be automatically performed, and weapon model meshswaps won't be swapped back to normal hands.

* `DRAW_RIGHTGUN` -- Swaps given entity's mesh #10 index with same mesh's index from _PISTOLS_ANIM_ model (model ID #1 in all TR versions). Calling this effect again swaps mesh #10 back to native. Used primarily in cutscenes to create an illusion of Lara getting pistol in her right hand. 

* `DRAW_LEFTGUN` -- Swaps given entity's mesh #13 index with same mesh's index from _PISTOLS_ANIM_ model (model ID #1 in all TR versions). Calling this effect again swaps mesh #13 back to native. Used primarily in cutscenes to create an illusion of Lara getting pistol in her left hand.

* `SHOOT_RIGHTGUN` -- Activates given entity's muzzle flash effect and dynamic light near mesh #10. Muzzle flash position and orientation, as well as effect duration and intensity is hardcoded. Used primarily in cutscenes.

* `SHOOT_LEFTGUN` -- Activates given entity's muzzle flash effect and dynamic light near mesh #13. Muzzle flash position and orientation, as well as effect duration and intensity is hardcoded. Used primarily in cutscenes.

* `MESH_SWAP1` -- Swaps all given entity meshes with _MESH_SWAP1_ model meshes (model ID varies across TR versions). Each mesh is swapped only if source meshswap model mesh is not null, otherwise swap is ignored for a given mesh. Calling this effect again swaps all meshes back to native. Used primarily in cutscenes.

* `MESH_SWAP2` -- Swaps all given entity meshes with _MESH_SWAP2_ model meshes (model ID varies across TR versions). Each mesh is swapped only if source meshswap model mesh is not null, otherwise swap is ignored for a given mesh. Calling this effect again swaps all meshes back to native. Used primarily in cutscenes.

* `MESH_SWAP3` -- Swaps all given entity meshes with _MESH_SWAP3_ model meshes (model ID varies across TR versions). Each mesh is swapped only if source meshswap model mesh is not null, otherwise swap is ignored for a given mesh. Calling this effect again swaps all meshes back to native. Used primarily in cutscenes.

* `INV_ON` -- Hides given entity.

* `INV_OFF` -- Shows given entity, if it was hidden.

* `RESET_HAIR` -- Presumably used to save Lara's ponytail from potential stuck during cutscenes.

* `SETFOG` -- When called by trigger action, changes global colour for volumetric fog effect. Takes `TriggerSetup` _Timer_ field as an index into hardcoded RGB table of colours (see  <<fog_bulb,this section>> for more info)

* `GHOSTTRAP` -- Kills all the living WRAITH3 entities (model ID #88) this way: the wraith starts falling towards given entity. Reaching it or not, the wraith will die if it hits the floor of the room.

* `CLEARSCARABS` -- Removes all swarms of scarabs currently wandering in level.

* `KILLACTIVEBADDIES` -- Disable and remove all active NPCs from level.

* `ASSAULT_RESET` -- Resets assault course clock (for ex., when Lara stepped out of assault course).

* `ASSAULT_STOP` -- Stops assault course clock.

* `ASSAULT_START` -- Starts assault course clock.

* `ASSAULT_FINISHED` -- Finishes assault course clock and fixes the record.

* `ASSAULT_PENALTY_8` -- 8-second penalty for losing track on assault course.

* `ASSAULT_PENALTY_30` -- 30-second penalty for losing track on assault course.

* `RACETRACK_START` -- Prepare racetrack timer for counting lap time. _Only works when Lara is on a quadbike!_ As soon as quadbike leaves sector with this flipeffect, timer will start counting.

* `RACETRACK_RESET` -- Resets current lap time. _Only works when Lara is on a quadbike!_

* `RACETRACK_FINISHED` -- Finishes racetrack timer and fixes the record. _Only works when Lara is on a quadbike!_

* `GYM_HINT_1-19` -- Sequence of Lara's voice hints on how to complete gym training. Reason why these are activated via flipeffects rather than normal soundtrack is they must be engaged in predefined order, e.g. voice hint #8 can't play before #7 was played, and so on.

* `GYM_HINT_RESET` -- Resets gym training progress, so all voice hints will be played once again.

* `RAISINGBLOCK_FX` -- Plays sound with ID 117.

* `CHAINBLOCK_FX` -- Plays sound with ID 173 and ID 33 with predefined interval.

* `EARTHQUAKE_FX` -- Shakes screen violently and plays sounds with ID 99 and 70 with predefined intervals. Used in TR1, Palace Midas.

* `STAIRS2SLOPE_FX` -- Plays sound with ID 119 with predefined delay.

* `FLICKER_FX` -- Flips alternate rooms back and forth several times with predefined intervals, creating illusion of flickering light. Used in TR1, first room of Atlantis.

* `RUBBLE_FX` -- Plays _global_ rumble sound FX and holds camera shake effect for some time, then finishes it with ``shutting'' sound. {TR4}{TR5} If there are any _earthquake type_ objects in a level, engine engages same behaviour _locally_ for these objects.

* `SETCHANGE_FX` -- If this effect is called by trigger action, play _global_ sound FX, taking `TriggerSetup` _Timer_ field as a sound ID.

* `EXPLOSION_FX` -- Plays _global_ explosion sound (ID #105) and produce full-screen flash graphical FX (TR3-5) or camera shake effect (TR1-2).
